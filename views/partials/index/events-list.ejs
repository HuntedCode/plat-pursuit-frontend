<section class="card shadow-lg w-full bg-base-200 border-2 border-base-300 mx-auto max-w-lg transition duration-300 hover:shadow-secondary hover:border-secondary hover:bg-base-300">
    <div class="card-body items-center text-center pt-2 w-full overflow-hidden">
        <h2 class="card-title text-2xl font-bold place-self-center">Community Events</h2>
        <div id="events-container" class="space-y-4 w-full">

        </div>

        <div class="flex justify-center mt-4">
            <div class="join" id="pagination">

            </div>
        </div>
    </div>
</section>

<!-- Needed for tailwind css pulls. Keep hidden -->
<div class="badge badge-primary hidden"></div>
<div class="badge badge-secondary hidden"></div>
<div class="badge badge-accent hidden"></div>
<!-- End -->

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const events = <%- JSON.stringify(events) %>;
        const pageSize = <%= pageSize %>;
        const totalPages = Math.ceil(events.length / pageSize);
        let currentPage = 1;

        const container = document.getElementById('events-container');
        const pagination = document.getElementById('pagination');

        const renderPage = (page) => {
            container.innerHTML = '';
            const start = (page - 1) * pageSize;
            const end = start + pageSize;
            events.slice(start, end).forEach(event => {
                const card = document.createElement('div');
                card.className = `card bg-base-100 shadow-md border-2 border-base-300 transition duration-300 hover:shadow-lg hover:shadow-${event.color || 'primary'} hover:bg-base-300 group w-full`;
                card.innerHTML = `
                    <div class="card-body flex flex-row items-center gap-4 p-3 overflow-hidden w-full">
                        <div class="flex-shrink-0 mr-3">
                            <div class="badge badge-${event.color || 'neutral'} badge-lg border-2 border-base-300 flex flex-col items-center p-3 min-h-16 justify-center">
                                <span class="text-xs font-bold">${new Date(event.date).toLocaleString('default', { month: 'short' })}</span>
                                <span class="text-lg font-bold">${new Date(event.date).getDate()}</span>
                            </div>
                        </div>

                        <div class="space-y-1 overflow-hidden text-start">
                            <h4 class="card-title text-base w-full line-clamp-1">${event.title}</h4>
                            <p class="text-xs text-base-content/70 truncate">${event.time || 'All Day'}</p>
                            <div class="overflow-hidden max-h-0 group-hover:max-h-32 transition-max-height duration-300 ease-in-out">
                                <p class="text-sm mt-2 line-clamp-2">${event.description || 'No details available.'}</p>
                            </div>
                        </div>
                    </div>
                `;
                container.appendChild(card);
            });
        };

        const renderPagination = () => {
            pagination.innerHTML = '';
            const prev = document.createElement('button');
            prev.className = 'join-item btn btn-sm' + (currentPage === 1 ? ' btn-disabled' : '');
            prev.textContent = '«';
            prev.onclick = () => { if (currentPage > 1) { currentPage--; renderPage(currentPage); renderPagination(); } };
            pagination.appendChild(prev);

            for (let i = 1; i <= totalPages; i++) {
                const btn = document.createElement('button');
                btn.className = 'join-item btn btn-sm' + (i === currentPage ? ' btn-active' : '');
                btn.textContent = i;
                btn.onclick = () => { currentPage = i; renderPage(i); renderPagination(); };
                pagination.appendChild(btn);
            }

            const next = document.createElement('button');
            next.className = 'join-item btn btn-sm' + (currentPage === totalPages ? ' btn-disabled' : '');
            next.textContent = '»';
            next.onclick = () => { if (currentPage < totalPages) { currentPage++; renderPage(currentPage); renderPagination(); } };
            pagination.appendChild(next);
        };

        if (events.length > 0) {
            renderPage(1);
            renderPagination();
        } else {
            container.innerHTML = '<p class="text-center text-base-content/70">No upcoming events.</p>';
        }
    });
</script>